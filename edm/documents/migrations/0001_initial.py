# Generated by Django 5.0 on 2023-12-14 07:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Detail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Подробно для документа"
                    ),
                ),
            ],
            options={
                "verbose_name": "Подробно",
                "verbose_name_plural": "Подробности",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Given",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Тип передачи документа"
                    ),
                ),
            ],
            options={
                "verbose_name": "Тип передачи",
                "verbose_name_plural": "Типы передачи",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Implementers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Исполнитель")),
            ],
            options={
                "verbose_name": "Исполнитель",
                "verbose_name_plural": "Исполнители",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Numeration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, verbose_name="Наименование счетчика"
                    ),
                ),
                ("num", models.PositiveIntegerField(verbose_name="Текущий номер")),
            ],
            options={
                "verbose_name": "Нумерация",
                "verbose_name_plural": "Нумерация",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Название организации"
                    ),
                ),
            ],
            options={
                "verbose_name": "Организация",
                "verbose_name_plural": "Организации",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Тема документа"),
                ),
            ],
            options={
                "verbose_name": "Тема",
                "verbose_name_plural": "Темы",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doc_type",
                    models.CharField(
                        choices=[
                            ("ВХ", "входящий"),
                            ("ИС", "исходящий"),
                            ("ВХ-ИС", "входящий-исходящий"),
                        ],
                        help_text="Укажите тип документа",
                        max_length=5,
                        verbose_name="Тип документа",
                    ),
                ),
                ("area", models.CharField(blank=True, max_length=100, null=True)),
                ("who", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "input_num",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Входящий номер"
                    ),
                ),
                (
                    "output_num",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Исходящий номер"
                    ),
                ),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="docs/%Y/%m/%d/"),
                ),
                ("size", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Укажите прочие подробности",
                        null=True,
                        verbose_name="Прочее",
                    ),
                ),
                (
                    "date_input_doc",
                    models.DateTimeField(
                        blank=True,
                        help_text="Укажите дату входящего документа",
                        null=True,
                        verbose_name="Дата входящего",
                    ),
                ),
                (
                    "date_output_doc",
                    models.DateTimeField(
                        blank=True,
                        help_text="Укажите дату исходящего документа",
                        null=True,
                        verbose_name="Дата исходящего",
                    ),
                ),
                (
                    "modified_date",
                    models.DateTimeField(auto_now=True, verbose_name="Дата изменения"),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата публикации"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="author_doc",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор создания",
                    ),
                ),
                (
                    "detail",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="detail_doc",
                        to="documents.detail",
                    ),
                ),
                (
                    "given",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="given_doc",
                        to="documents.given",
                    ),
                ),
                (
                    "implementers",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="implementers_doc",
                        to="documents.implementers",
                    ),
                ),
                (
                    "from_where",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="org_from",
                        to="documents.organization",
                    ),
                ),
                (
                    "theme",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="theme_doc",
                        to="documents.theme",
                    ),
                ),
            ],
            options={
                "verbose_name": "Документ",
                "verbose_name_plural": "Документы",
                "ordering": ["-id"],
            },
        ),
    ]
